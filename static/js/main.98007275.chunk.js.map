{"version":3,"sources":["components/Header.jsx","components/TitleInput.jsx","components/SubtitleInput.jsx","components/ImagePath.jsx","components/TextArea.jsx","components/NumberInput.jsx","components/GenderSelectAM.jsx","components/AddMovie.jsx","components/Rating.jsx","components/MovieCard.jsx","components/MovieList.jsx","components/IncludesText.jsx","components/SearchBar.jsx","components/MovieLibrary.jsx","data.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","React","Component","TitleInput","this","props","value","onChange","data-testid","htmlFor","id","type","name","SubtitleInput","ImagePath","TextArea","NumberInput","GenderSelectAM","AddMovie","handleChange","bind","handleButton","state","title","subtitle","imagePath","storyline","rating","genre","target","setState","onClick","Rating","defaultProps","MovieCard","movie","alt","src","MovieList","movies","map","key","IncludesText","SearchBar","searchText","bookmarkedOnly","selectedGenre","onSearchTextChange","onBookmarkedChange","onSelectedGenreChange","checked","MovieLibrary","updateMovieList","movieList","event","lowerCase","toLowerCase","filter","includes","bookmarked","newMovie","prevState","getFilteredMovieList","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.98007275.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"movie-card-header\">\n        <h1 className=\"page-title\">Movie Cards Library</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TitleInput extends React.Component {\n  render() {\n    const { value, onChange } = this.props;\n    return (\n      <label\n        data-testid=\"title-input-label\"\n        htmlFor=\"title-input\"\n        className=\"form-input-label\"\n      >\n        Título\n        <br />\n        <input\n          id=\"title-input\"\n          className=\"form-input\"\n          type=\"text\"\n          name=\"title\"\n          data-testid=\"title-input\"\n          value={ value }\n          onChange={ onChange }\n        />\n      </label>\n    );\n  }\n}\n\nTitleInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default TitleInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SubtitleInput extends React.Component {\n  render() {\n    const { value, onChange } = this.props;\n    return (\n      <label\n        data-testid=\"subtitle-input-label\"\n        htmlFor=\"subtitle-input\"\n        className=\"form-input-label\"\n      >\n        Subtítulo\n        <input\n          id=\"subtitle-input\"\n          className=\"form-input\"\n          type=\"text\"\n          name=\"subtitle\"\n          data-testid=\"subtitle-input\"\n          value={ value }\n          onChange={ onChange }\n        />\n      </label>\n    );\n  }\n}\n\nSubtitleInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SubtitleInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ImagePath extends React.Component {\n  render() {\n    const { value, onChange } = this.props;\n    return (\n      <label\n        data-testid=\"image-input-label\"\n        htmlFor=\"image-input\"\n        className=\"form-input-label\"\n      >\n        Imagem\n        <input\n          id=\"image-input\"\n          className=\"form-input\"\n          type=\"text\"\n          name=\"imagePath\"\n          data-testid=\"image-input\"\n          value={ value }\n          onChange={ onChange }\n        />\n      </label>\n    );\n  }\n}\n\nImagePath.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ImagePath;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TextArea extends React.Component {\n  render() {\n    const { value, onChange } = this.props;\n    return (\n      <label\n        data-testid=\"storyline-input-label\"\n        htmlFor=\"storyline-input\"\n        className=\"form-input-label\"\n      >\n        Sinopse\n        <textarea\n          id=\"storyline-input\"\n          className=\"form-input\"\n          name=\"storyline\"\n          data-testid=\"storyline-input\"\n          value={ value }\n          onChange={ onChange }\n        />\n      </label>\n    );\n  }\n}\n\nTextArea.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default TextArea;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass NumberInput extends React.Component {\n  render() {\n    const { value, onChange } = this.props;\n    return (\n      <label\n        data-testid=\"rating-input-label\"\n        className=\"form-input-label\"\n        htmlFor=\"rating-input\"\n      >\n        Avaliação\n        <input\n          id=\"rating-input\"\n          className=\"form-input\"\n          type=\"number\"\n          name=\"rating\"\n          data-testid=\"rating-input\"\n          value={ value }\n          onChange={ onChange }\n        />\n      </label>\n    );\n  }\n}\n\nNumberInput.propTypes = {\n  value: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default NumberInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass GenderSelectAM extends React.Component {\n  render() {\n    const { value, onChange } = this.props;\n    return (\n      <label\n        data-testid=\"genre-input-label\"\n        className=\"form-input-label\"\n        htmlFor=\"Gender-Select-AM\"\n      >\n        Gênero\n        <select\n          id=\"Gender-Select-AM\"\n          className=\"form-input\"\n          name=\"genre\"\n          data-testid=\"genre-input\"\n          value={ value }\n          onChange={ onChange }\n        >\n          <option value=\"action\" data-testid=\"genre-option\">Ação</option>\n          <option value=\"comedy\" data-testid=\"genre-option\">Comédia</option>\n          <option value=\"thriller\" data-testid=\"genre-option\">Suspense</option>\n        </select>\n      </label>\n    );\n  }\n}\n\nGenderSelectAM.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default GenderSelectAM;\n","// implement AddMovie component here\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TitleInput from './TitleInput';\nimport SubtitleInput from './SubtitleInput';\nimport ImagePath from './ImagePath';\nimport TextArea from './TextArea';\nimport NumberInput from './NumberInput';\nimport GenderSelectAM from './GenderSelectAM';\n\nclass AddMovie extends React.Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n    this.state = {\n      title: '',\n      subtitle: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    };\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleButton() {\n    const { onClick } = this.props;\n    onClick(this.state);\n    this.setState({\n      title: '',\n      subtitle: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    });\n  }\n\n  render() {\n    const { title, subtitle, imagePath, storyline, rating, genre } = this.state;\n    return (\n      <div className=\"form-container\">\n        <h3>Não encontrou o que procurava ? Adicione um filme à lista 😉</h3>\n        <form data-testid=\"add-movie-form\">\n          <TitleInput value={ title } onChange={ this.handleChange } />\n          <SubtitleInput value={ subtitle } onChange={ this.handleChange } />\n          <ImagePath value={ imagePath } onChange={ this.handleChange } />\n          <TextArea value={ storyline } onChange={ this.handleChange } />\n          <NumberInput value={ rating } onChange={ this.handleChange } />\n          <GenderSelectAM value={ genre } onChange={ this.handleChange } />\n          <button\n            data-testid=\"send-button\"\n            type=\"button\"\n            onClick={ this.handleButton }\n          >\n            Adicionar filme\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddMovie.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default AddMovie;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Rating extends React.Component {\n  render() {\n    const { rating } = this.props;\n    return (\n      <div className=\"movie-card-rating\" data-testid=\"rating\">\n        <span className=\"rating\">{rating}</span>\n      </div>\n    );\n  }\n}\n\nRating.propTypes = { rating: PropTypes.number };\n\nRating.defaultProps = {\n  rating: 'undefined',\n};\n\nexport default Rating;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rating from './Rating';\n\nclass MovieCard extends React.Component {\n  render() {\n    const { movie } = this.props;\n    const { title, subtitle, storyline, rating, imagePath } = movie;\n    return (\n      <div className=\"movie-card\" data-testid=\"movie-card\">\n        <img alt=\"Movie Cover\" className=\"movie-card-image\" src={ imagePath } />\n        <div className=\"movie-card-body\">\n          <h4 data-testid=\"movie-card-title\" className=\"movie-card-title\">{title}</h4>\n          <h5 className=\"movie-card-subtitle\">{subtitle}</h5>\n          <p className=\"movie-card-storyline\">{storyline}</p>\n        </div>\n        <Rating rating={ rating } />\n      </div>\n    );\n  }\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    imagePath: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieCard from './MovieCard';\n\nclass MovieList extends React.Component {\n  render() {\n    const { movies } = this.props;\n\n    return (\n      <div data-testid=\"movie-list\" className=\"movie-list\">\n        { movies.map((movie) => <MovieCard key={ movie.title } movie={ movie } />) }\n      </div>\n    );\n  }\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n};\n\nexport default MovieList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nclass IncludesText extends React.Component {\n  render() {\n    const { value, onChange } = this.props;\n    return (\n      <div>\n        <label\n          data-testid=\"text-input-label\"\n          htmlFor=\"includes-text\"\n          className=\"form-input-label form-item\"\n        >\n          Inclui o texto\n          <br />\n          <input\n            className=\"form-input\"\n            id=\"includes-text\"\n            name=\"text-input\"\n            data-testid=\"text-input\"\n            value={ value }\n            onChange={ onChange }\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nIncludesText.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default IncludesText;\n","// implement SearchBar component here\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IncludesText from './IncludesText';\nimport '../App.css';\n\nclass SearchBar extends React.Component {\n  render() {\n    const {\n      searchText, bookmarkedOnly, selectedGenre,\n      onSearchTextChange, onBookmarkedChange, onSelectedGenreChange } = this.props;\n    return (\n      <div className=\"form-container\">\n        <h3>Buscando por algum filme em especial ? 🤔</h3>\n        <form data-testid=\"search-bar-form\">\n          <IncludesText value={ searchText } onChange={ onSearchTextChange } />\n          <label\n            data-testid=\"checkbox-input-label\"\n            htmlFor=\"show-favorites\"\n          >\n            <input\n              id=\"show-favorites\"\n              data-testid=\"checkbox-input\"\n              className=\"form-item\"\n              type=\"checkbox\"\n              checked={ bookmarkedOnly }\n              onChange={ onBookmarkedChange }\n            />\n            Mostrar somente favoritos\n          </label>\n          <br />\n          <label\n            data-testid=\"select-input-label\"\n            htmlFor=\"filter-by-gender\"\n            className=\"form-input-label form-item\"\n          >\n            Filtrar por gênero\n            <br />\n            <select\n              name=\"\"\n              id=\"filter-by-gender\"\n              className=\"form-input\"\n              data-testid=\"select-input\"\n              value={ selectedGenre }\n              onChange={ onSelectedGenreChange }\n            >\n              <option value=\"\" data-testid=\"select-option\">Todos</option>\n              <option value=\"action\" data-testid=\"select-option\">Ação</option>\n              <option value=\"comedy\" data-testid=\"select-option\">Comédia</option>\n              <option value=\"thriller\" data-testid=\"select-option\">Suspense</option>\n            </select>\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  searchText: PropTypes.string.isRequired,\n  onSearchTextChange: PropTypes.func.isRequired,\n  bookmarkedOnly: PropTypes.bool.isRequired,\n  onBookmarkedChange: PropTypes.func.isRequired,\n  selectedGenre: PropTypes.string.isRequired,\n  onSelectedGenreChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","// implement MovieLibrary component here\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AddMovie from './AddMovie';\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\n\nclass MovieLibrary extends React.Component {\n  constructor(props) {\n    super();\n    this.onSearchTextChange = this.onSearchTextChange.bind(this);\n    this.onBookmarkedChange = this.onBookmarkedChange.bind(this);\n    this.onSelectedGenreChange = this.onSelectedGenreChange.bind(this);\n    this.updateMovieList = this.updateMovieList.bind(this);\n\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movieList: [...props.movies],\n    };\n  }\n\n  onSearchTextChange(event) {\n    this.setState({ searchText: event.target.value });\n  }\n\n  onBookmarkedChange(event) {\n    this.setState({ bookmarkedOnly: event.target.checked });\n  }\n\n  onSelectedGenreChange(event) {\n    this.setState({ selectedGenre: event.target.value });\n  }\n\n  getFilteredMovieList() {\n    const { searchText, bookmarkedOnly, selectedGenre, movieList } = this.state;\n    const lowerCase = searchText.toLowerCase();\n\n    if (lowerCase !== '') {\n      const filteredByText = movieList.filter((movie) => movie.title\n        .toLowerCase().includes(lowerCase)\n        || movie.subtitle.toLowerCase().includes(lowerCase)\n        || movie.storyline.toLowerCase().includes(lowerCase));\n      return filteredByText;\n    }\n\n    if (bookmarkedOnly === true) {\n      const filteredByBookmarkedOnly = movieList\n        .filter((movie) => movie.bookmarked === true);\n      return filteredByBookmarkedOnly;\n    }\n\n    if (selectedGenre !== '') {\n      const filteredBySelectedGenre = movieList\n        .filter((movie) => movie.genre === selectedGenre);\n      return filteredBySelectedGenre;\n    }\n    return movieList;\n  }\n\n  updateMovieList(newMovie) {\n    this.setState((prevState) => ({\n      movieList: [...prevState.movieList, newMovie],\n    }));\n  }\n\n  render() {\n    const { searchText, bookmarkedOnly, selectedGenre } = this.state;\n    return (\n      <div>\n        <SearchBar\n          searchText={ searchText }\n          bookmarkedOnly={ bookmarkedOnly }\n          selectedGenre={ selectedGenre }\n          onSearchTextChange={ this.onSearchTextChange }\n          onBookmarkedChange={ this.onBookmarkedChange }\n          onSelectedGenreChange={ this.onSelectedGenreChange }\n        />\n        <MovieList\n          movies={ this.getFilteredMovieList() }\n        />\n        <AddMovie onClick={ this.updateMovieList } />\n      </div>\n    );\n  }\n}\n\nMovieLibrary.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      subtitle: PropTypes.string,\n      title: PropTypes.string,\n      imagePath: PropTypes.string,\n      storyline: PropTypes.string,\n      rating: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      genre: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default MovieLibrary;\n","const movies = [\n  {\n    title: 'Kingsglaive',\n    subtitle: 'Final Fantasy XV',\n    storyline: \"King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire's plans to steal the sacred crystal.\",\n    rating: 4.5,\n    imagePath: 'images/Kingsglaive_Final_Fantasy_XV.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Final Fantasy',\n    subtitle: 'Spirits Within',\n    storyline: 'A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.',\n    rating: 4.5,\n    imagePath: 'images/Final_Fantasy_Spirits_Within.jpg',\n    bookmarked: false,\n    genre: 'fantasy',\n  },\n  {\n    title: 'Ghost In The Shell',\n    subtitle: 'Ghost In The Shell',\n    storyline: 'A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).',\n    rating: 5,\n    imagePath: 'images/Ghost_In_The_Shell_2_0.jpg',\n    bookmarked: false,\n    genre: 'comedy',\n  },\n  {\n    title: 'Appleseed Alpha',\n    subtitle: 'Appleseed Alpha',\n    storyline: \"A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human's future hope, the legendary city of Olympus.\",\n    rating: 3.8,\n    imagePath: 'images/Appleseed_Alpha.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Resident Evil',\n    subtitle: 'Vendetta',\n    storyline: 'Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.',\n    rating: 4.2,\n    imagePath: 'images/Resident_Evil_Vendetta.jpg',\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n];\n\nexport default movies;\n","import React from 'react';\nimport Header from './components/Header';\nimport MovieLibrary from './components/MovieLibrary';\nimport './App.css';\nimport movies from './data';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MovieLibrary movies={ movies } />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}